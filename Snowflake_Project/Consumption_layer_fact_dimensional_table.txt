USE ROLE ACCOUNTADMIN;
USE WAREHOUSE COMPUTE_WH;
USE DATABASE CRICKET;
USE SCHEMA CONSUMPTION_LAYER;

create or replace table date_dim(
date_id int primary key autoincrement,
full_dt date,
day int,
month int,
year int,
quarter int,
dayofweek int,
dayofmonth int,
dayofyear int,
dayofweekname varchar(3),--(to store day names e.g Mon)
isweekend boolean---(to indicate if it's a weekend (true/false) saturday sunday both falls under weekend)
);

--match_referees,reserve_umpires,tv_umpires,field_umpires
create or replace table referee_dim
(
referee_id int primary key autoincrement,
referee_name text not null,
referee_type text not null
);

--India,Australia etc...
create or replace table team_dim (
team_id int primary key autoincrement,
team_name text not null
);

--Player Table
create or replace table player_dim (
player_id int primary key autoincrement,
team_id int not null,
player_name text not null
);

--Foreign key relationship between team_dim and player_dim
alter table cricket.consumption_layer.player_dim
add constraint fk_team_player_id
foreign key(team_id)
references cricket.consumption_layer.team_dim (team_id);

--venue_dim table
create or replace table venue_dim(
venue_id int primary key autoincrement,
venue_name text not null,
city text not null,
state text,
country text,
continent text,
end_names text,
capacity number,
pitch text,
flood_light boolean,
established_date date,
playing_area text,
other_sports text,
curator text,
lattitude number(10,6),
longitude number(10,6)
);

--match_type dim table
create or replace table match_type_dim (
match_type_id int primary key autoincrement,
match_type text not null
);

--match_fact table
create or replace table match_fact (
match_id int primary key autoincrement,
date_id int not null,
referee_id  int not null,
team_a_id int not null,
team_b_id int not null,
match_type_id int not null,
venue_id  int not null,
total_overs number(3),
balls_per_over number(1),

overs_played_by_team_a number(2),
bowls_played_by_team_a number(3),
extra_bowls_played_by_team_a number(3),
extra_runs_scored_by_team_a number(3),
fours_by_team_a number(3),
sixes_by_team_a number(3),
total_score_by_team_a number(3),
wicket_lost_by_team_a number(2),

overs_played_by_team_b number(2),
bowls_played_by_team_b number(3),
extra_bowls_played_by_team_b number(3),
extra_runs_scored_by_team_b number(3),
fours_by_team_b number(3),
sixes_by_team_b number(3),
total_score_by_team_b number(3),
wicket_lost_by_team_b number(2),

toss_winner_team_id int not null,
toss_decision text not null,
match_result text not null,
winner_team_id int not null,

constraint fk_date foreign key (date_id) references date_dim (date_id),
constraint fk_referee foreign key (referee_id) references referee_dim (referee_id),
constraint fk_team1 foreign key (team_a_id) references team_dim (team_id),
constraint fk_team2 foreign key (team_b_id) references team_dim (team_id),
constraint fk_match_type foreign key (match_type_id) references match_type_dim(match_type_id),
constraint fk_venue foreign key (venue_id) references venue_dim (venue_id),
constraint fk_toss_winner_team foreign key (toss_winner_team_id) references team_dim(team_id),
constraint fk_winner_team  foreign key (winner_team_id)references team_dim (team_id)

);

--lets populate the data 
--we will extract the dimensional table data using our detail table from clean layer.
--and it will be based on description field as we dont have any master data set.
--in real world,you may also get master data set as separate entities.

--Lets start with team_dim ,and for simplicity ,it is just team name 

select distinct team_name from (
select first_team as team_name from cricket.cleansing_layer.match_detail_clean
union all
select second_team as team_name from cricket.cleansing_layer.match_detail_clean
);

--version 2
insert into cricket.consumption_layer.team_dim(team_name)
select distinct team_name from (
select first_team as team_name from cricket.cleansing_layer.match_detail_clean
union all
select second_team as team_name from cricket.cleansing_layer.match_detail_clean
) order by team_name;

---version 3
select * from cricket.consumption_layer.team_dim order by team_name;



---team player dimentional table
--version 1
select * from cricket.cleansing_layer.player_clean_table limit 10;

--version 2
select country,player_name from cricket.cleansing_layer.player_clean_table
group by country,player_name;

--version 3
select a.country,a.player_name,b.team_id
from cricket.cleansing_layer.player_clean_table a join cricket.consumption_layer.team_dim b
on a.country=b.team_name
group by 
a.country,
b.team_id,
a.player_name;

--version 4
insert into cricket.consumption_layer.player_dim (team_id,player_name)
select b.team_id, a.player_name,
from cricket.cleansing_layer.player_clean_table a join cricket.consumption_layer.team_dim b
on a.country=b.team_name
group by 
b.team_id,
a.player_name;

--version 5 Check the data
select * from cricket.consumption_layer.player_dim


---Referee dimensional table
-- since we have not populated the referee detail in our previous layer
-- we will skip it for now ...we need to understand the it well
-- before we can design the referee_dim

select info from cricket.raw_layer.match_raw_table limit 1;
select 
 info:officials.match_referees[0]::text as match_referee,
 info:officials.reserve_umpires[0]::text as reserve_umpire,
 info:officials.tv_umpires[0]::text as tv_umpire,
 info:officials.umpires[0]::text as first_umpire,
 info:officials.umpires[1]::text as second_umpire
 from
 cricket.raw_layer.match_raw_table;

 -------------------------------------------------------------------------------------------
 --Venue_dimension table
 --version 1
 select * from cricket.cleansing_layer.match_detail_clean limit 10;
 --version 2
 select venue,city from cricket.cleansing_layer.match_detail_clean; limit 10;
--version 3
 select venue,city  
 from cricket.cleansing_layer.match_detail_clean
 group by 
 venue,
 city;
 --version 4
 insert into cricket.consumption_layer.venue_dim(venue_name,city)
 select venue,city from
 (
   select 
   venue,
   case when city is null then'NA'
   else city
   end as city
  from cricket.cleansing_layer.match_detail_clean
)
 group by 
 venue,
 city;

 select * from cricket.consumption_layer.venue_dim where city='Bengaluru';

 select city from cricket.consumption_layer.venue_dim  group by city having count(1)>1;

 -------------------------------------------------------------------------------------------

 --Match Type Dimension

 select * from cricket.cleansing_layer.match_detail_clean;
 
 select match_type from cricket.cleansing_layer.match_detail_clean group by match_type;
 
 insert into cricket.consumption_layer.match_type_dim (match_type)
 select match_type from cricket.cleansing_layer.match_detail_clean group by match_type;

------------------------------------------------------------------------------------------------









, 

 



 
 

 
 
 

 






































